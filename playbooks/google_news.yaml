playbook:
  spec:
    name: google_news
    description: Search google news
    arguments:
      - name: keywords
        type: string
        description: Keywords used for searching news topics
        required: true
  actions:
    - when:
        args: { eq: [$keywords, null] }
        actions:
          - setvar: [url, https://news.google.com]
    - when:
        args: { ne: [$keywords, null] }
        actions:
          - setvar: [url, "https://news.google.com/search?q={$keywords}"]
    - log: "Visit GoogleNews: {$url}"
    - browser.open:
        args:
          exec: /Applications/Google Chrome.app/Contents/MacOS/Google Chrome
          headless: true
        result: $browser
    - browser.goto:
        args:
          browser: $browser
          url: $url
          timeout: 120000
        result: $page
    - browser.eval:
        args:
          page: $page
          javascript: |
            [...document.querySelectorAll("a")].map(v => {{
                title = v.innerText;
                link = v.href;
                return {{title, link}}
            }}).filter(v => v.title !== '' && v.link.startsWith("https://news.google.com/articles/"))
        result: $news
    - browser.close: $browser
    - each:
        args: $news
        actions:
          - dict.get:
              args: [$_, title]
              result: $title
          #- log: $title
          - list.append: [$news_titles, $title]
    - echo: $news_titles
